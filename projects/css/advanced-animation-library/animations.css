/* Advanced CSS Animation Library */

/* 3D Cube Rotation */
@keyframes cube-rotate {
    0% { 
        transform: rotateX(0deg) rotateY(0deg) rotateZ(0deg);
    }
    25% { 
        transform: rotateX(90deg) rotateY(0deg) rotateZ(0deg);
    }
    50% { 
        transform: rotateX(90deg) rotateY(90deg) rotateZ(0deg);
    }
    75% { 
        transform: rotateX(90deg) rotateY(90deg) rotateZ(90deg);
    }
    100% { 
        transform: rotateX(360deg) rotateY(360deg) rotateZ(360deg);
    }
}

.cube-3d {
    transform-style: preserve-3d;
    perspective: 1000px;
    transition: all 0.3s ease;
}

.cube-3d.animate {
    animation: cube-rotate 4s infinite linear;
}

/* Morphing Shapes */
@keyframes morph-cycle {
    0% { 
        border-radius: 50%; 
        transform: scale(1) rotate(0deg);
        background: linear-gradient(45deg, #4ecdc4, #44a08d);
    }
    25% { 
        border-radius: 0%; 
        transform: scale(1.2) rotate(90deg);
        background: linear-gradient(45deg, #ff6b6b, #ee5a24);
    }
    50% { 
        border-radius: 50% 0% 50% 0%; 
        transform: scale(0.8) rotate(180deg);
        background: linear-gradient(45deg, #45b7d1, #96c93d);
    }
    75% { 
        border-radius: 0% 50% 0% 50%; 
        transform: scale(1.1) rotate(270deg);
        background: linear-gradient(45deg, #f093fb, #f5576c);
    }
    100% { 
        border-radius: 50%; 
        transform: scale(1) rotate(360deg);
        background: linear-gradient(45deg, #4ecdc4, #44a08d);
    }
}

.morph-shape.animate {
    animation: morph-cycle 3s infinite ease-in-out;
}

/* Liquid Wave Animation */
@keyframes wave-motion {
    0% {
        border-radius: 50% 40% 30% 70% / 60% 30% 70% 40%;
        transform: rotate(0deg) scale(1);
    }
    25% {
        border-radius: 30% 60% 70% 40% / 50% 60% 30% 60%;
        transform: rotate(90deg) scale(1.1);
    }
    50% {
        border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
        transform: rotate(180deg) scale(0.9);
    }
    75% {
        border-radius: 40% 60% 70% 30% / 40% 70% 60% 50%;
        transform: rotate(270deg) scale(1.05);
    }
    100% {
        border-radius: 50% 40% 30% 70% / 60% 30% 70% 40%;
        transform: rotate(360deg) scale(1);
    }
}

.liquid-wave.animate {
    animation: wave-motion 2s infinite ease-in-out;
}

/* Glitch Effect */
@keyframes glitch-animation {
    0% { 
        transform: translate(0);
        filter: hue-rotate(0deg);
    }
    10% { 
        transform: translate(-2px, 2px);
        filter: hue-rotate(90deg);
    }
    20% { 
        transform: translate(-2px, -2px);
        filter: hue-rotate(180deg);
    }
    30% { 
        transform: translate(2px, 2px);
        filter: hue-rotate(270deg);
    }
    40% { 
        transform: translate(2px, -2px);
        filter: hue-rotate(360deg);
    }
    50% { 
        transform: translate(-2px, 2px);
        filter: hue-rotate(90deg);
    }
    60% { 
        transform: translate(-2px, -2px);
        filter: hue-rotate(180deg);
    }
    70% { 
        transform: translate(2px, 2px);
        filter: hue-rotate(270deg);
    }
    80% { 
        transform: translate(2px, -2px);
        filter: hue-rotate(360deg);
    }
    90% { 
        transform: translate(-2px, 2px);
        filter: hue-rotate(90deg);
    }
    100% { 
        transform: translate(0);
        filter: hue-rotate(0deg);
    }
}

@keyframes glitch-before {
    0% { 
        clip-path: inset(40% 0 61% 0);
        transform: translate(-2px, -2px);
    }
    20% { 
        clip-path: inset(92% 0 1% 0);
        transform: translate(2px, 2px);
    }
    40% { 
        clip-path: inset(43% 0 1% 0);
        transform: translate(-2px, 2px);
    }
    60% { 
        clip-path: inset(25% 0 58% 0);
        transform: translate(2px, -2px);
    }
    80% { 
        clip-path: inset(54% 0 7% 0);
        transform: translate(-2px, -2px);
    }
    100% { 
        clip-path: inset(58% 0 43% 0);
        transform: translate(2px, 2px);
    }
}

@keyframes glitch-after {
    0% { 
        clip-path: inset(25% 0 58% 0);
        transform: translate(2px, 2px);
    }
    20% { 
        clip-path: inset(54% 0 7% 0);
        transform: translate(-2px, -2px);
    }
    40% { 
        clip-path: inset(58% 0 43% 0);
        transform: translate(2px, -2px);
    }
    60% { 
        clip-path: inset(40% 0 61% 0);
        transform: translate(-2px, 2px);
    }
    80% { 
        clip-path: inset(92% 0 1% 0);
        transform: translate(2px, -2px);
    }
    100% { 
        clip-path: inset(43% 0 1% 0);
        transform: translate(-2px, 2px);
    }
}

.glitch-text {
    position: relative;
    font-weight: bold;
    font-size: 16px;
}

.glitch-text.animate {
    animation: glitch-animation 0.3s infinite;
}

.glitch-text.animate::before,
.glitch-text.animate::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: inherit;
    display: flex;
    align-items: center;
    justify-content: center;
}

.glitch-text.animate::before {
    animation: glitch-before 0.3s infinite;
    color: #ff0000;
    z-index: -1;
    mix-blend-mode: multiply;
}

.glitch-text.animate::after {
    animation: glitch-after 0.3s infinite;
    color: #00ff00;
    z-index: -2;
    mix-blend-mode: multiply;
}

/* Magnetic Hover Effect */
.magnetic-element {
    transition: transform 0.2s ease-out;
    cursor: pointer;
}

/* Particle System */
.particle-container {
    position: relative;
    overflow: visible;
}

.particle {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 8px;
    height: 8px;
    background: radial-gradient(circle, #ffffff, #f0f0f0);
    border-radius: 50%;
    pointer-events: none;
    box-shadow: 0 0 6px rgba(255, 255, 255, 0.8);
}

/* Advanced Hover Effects */
.demo-element {
    position: relative;
    overflow: hidden;
}

.demo-element::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
    transition: left 0.5s ease;
}

.demo-element:hover::before {
    left: 100%;
}

/* Pulsing Glow Effect */
@keyframes pulse-glow {
    0% {
        box-shadow: 0 0 5px rgba(102, 126, 234, 0.5);
    }
    50% {
        box-shadow: 0 0 20px rgba(102, 126, 234, 0.8), 0 0 30px rgba(102, 126, 234, 0.6);
    }
    100% {
        box-shadow: 0 0 5px rgba(102, 126, 234, 0.5);
    }
}

.demo-element:hover {
    animation: pulse-glow 2s infinite;
}

/* Floating Animation */
@keyframes float {
    0% {
        transform: translateY(0px);
    }
    50% {
        transform: translateY(-10px);
    }
    100% {
        transform: translateY(0px);
    }
}

.demo-card {
    animation: float 3s ease-in-out infinite;
}

.demo-card:nth-child(2) {
    animation-delay: 0.5s;
}

.demo-card:nth-child(3) {
    animation-delay: 1s;
}

.demo-card:nth-child(4) {
    animation-delay: 1.5s;
}

.demo-card:nth-child(5) {
    animation-delay: 2s;
}

.demo-card:nth-child(6) {
    animation-delay: 2.5s;
}

/* Responsive Animations */
@media (max-width: 768px) {
    .demo-element {
        width: 80px;
        height: 80px;
        font-size: 14px;
    }
    
    .demo-card {
        animation: none;
    }
    
    .glitch-text.animate::before,
    .glitch-text.animate::after {
        display: none;
    }
}

/* Performance Optimizations */
.demo-element,
.demo-card {
    will-change: transform;
    backface-visibility: hidden;
    perspective: 1000px;
}

/* Accessibility */
@media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
    }
}
